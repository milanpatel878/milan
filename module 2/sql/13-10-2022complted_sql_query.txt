SQL :
sql stands for structured query language
sql is used to create database and table structured
sql is language
sql is case-insentive language
sql is used to store data | update data | delete data inside of table

SQL query or commands

          type of sql query
             a) DDL(data definetion language)
             b) DML(data manupulation language)
             c) DQL(data query language)
             d) TCL(transactional query language)
          

     DDL :
     eg: create , alter , truncate , drop , rename , change etc.  
          1) how to create database 
               eg: create database databasename;
                   create database ecommercedb;

          2) how to create table 
               
                        chart of table

 columnname               datatype(size)               key constraints
        name              varchar(0-255),char          not null
        id                int(default size(11))        primary key(auto_increment) 
        photo             varchar(0-255),blob
        mobile            bigint(default size(20)) 
        address           text
        date              varchar(0-255), date
        datetime          varchar(0-255), datetime
        salary            float
        

          eg: create table tbl_employee_details
(

        empid int PRIMARY KEY AUTO_INCREMENT,
        empname varchar(255),
        firstname varchar(255),
        lastname varchar(255),
        email varchar(255),
        password varchar(255),
        mobile bigint,
        salary float,
        address text,
        photo varchar(255),
        dob date

);            


create table tbl_country
(

        countryid int PRIMARY KEY AUTO_INCREMENT,
        countryname varchar(255)
     
);


create table tbl_state
(

        stateid int PRIMARY KEY AUTO_INCREMENT,
        statename varchar(255)
     
);


2) alter :alter is used to add column name and modify or update column in table

            ex: alter table tbl_employee_details add pincode int;
            ex: alter table tbl_employee_details add addressline1 text;
            ex: alter table tbl_employee_details add confirmpassword  varchar(255) after password;

             ex:alter table tbl_employee_details CHANGE photo upload_photo varchar(255);   


3)chnage : alter table tbl_employee_details CHANGE photo upload_photo varchar(255);   
4)rename : rename the tablename

          ex: rename table tbl_country to country;
          ex: rename table tbl_state to state;


5)truncate : truncate are used to empty or remove data from table
             ex: truncate table tablename;
                  truncate table country; 
             Note: after truncate we can not rollback data      
      
6)drop : drop is used to drop database structure and table structured and data also after drop we never rollback data.
     
              ex:drop database databasename;
                 drop table tablename;
                  drop table country;

     
             

 2)DML : data manupulation language 

           ex: insert , delete , update 

              a) insert : 

                      insert into country(countryname) VALUES('india');
                      insert into country(countryname) VALUES('usa'),('china'),('canada');
                        
insert into country VALUES('null','australia'),('null','russia'),('null','ukrain'); 

                 
insert into employee_details VALUES('null','kishan','kishu','pandya','kishan@gmail.com','kishu321','kishu321','91254545','85682','150 feet ring road','kishan.jpg','24/09/1997','360001','rajkot');


     b) delete data : 
        
                   1) delete from country;
                   c) delete from country where countryid=3;
                   3) delete from country where countryname='china';
                   4) delete from country where countryname in ('china','russia','ukrain');
                   5) delete from country where countryid BETWEEN 2 and 5; 


     c) update :    update tablename set columnname='value' where id=10;

                UPDATE country set countryname='nepal' where countryid=10;

                UPDATE employee_details set empname='milan',firstname='milan', lastname='patel', email='milan@gmail.com',password='milan123',confirmpassword='milan123' where empid=1;



3)DQL : data query language 
          
                select

                a) select * from country;  
                b) select * from country where countryname='india';
                c) select countryid,countryname from country;
                d) select countryname from country;  
                e) select countryid,countryname from country;
                f) select * from country where countryid BETWEEN 8 and 100;   
                 

                difference b/w order by and group by 

                    order by :  filter data from table in ascending or descending order.

                         a) select * from country order by countryname asc;
                         b) select * from country order by countryname desc;


                      group by : filter data from table on group of columns.

                       eg: select sum(salary),department from employee_details GROUP by department;


                Like operator : 

                 like operator are used to seraching data from tables.

                    ex: select * from employee_details where  empname like 'k%'; 
                    ex: select * from employee_details where  empname like '%k';
                    ex: select * from employee_details where  empname like '%n'; 



           4) TCL : transaction control language 

                    a) commit : save the data before delete
                          ex: START TRANSACTION;
delete from country where countryid=8;
commit;
                    b) rollback    

                       START TRANSACTION;
select * from country where countryid=8;
rollback;


            Note: rollback is not supported in mysql its support in Oracle


    SQL function : 

              There are two types of sql function

                   a) aggrigate function
                      1)sum()
                      2)avg()
                      3)max()
                      4)min()
                      5)count()
                     
                   b) scalar function

                        1)first()
                        2)last()
                        3)lcase()
                        4)ucase()


                    1)select sum(salary) from employee_details;
                    2) select avg(salary) from employee_details;
                    3) select max(salary) from employee_details;
                    4) select min(salary) from employee_details;
                    5)select empname,min(salary) as minimum_salary from  employee_details 
                     6)select empname,max(salary) as minimum_salary from  employee_details;

                     7) SELECT empname, salary FROM employee_details
ORDER BY  salary DESC LIMIT 1; 

                     8) select max(salary) from employee_details where salary < (select max(salary) FROM employee_details);

                     9) select count(empid) as total_employee from employee_details;  

                     10) select first(empid)  from employee_details;  

                     11) select last(empid)  from employee_details;  
                     12) select ucase(empname)  from employee_details;
                     12) select lcase(empname)  from employee_details; 

             SQL key constraints :
                    1) PK
                    2) fk
                    3) uk 

1) 
create table department
(
depid int primary key AUTO_INCREMENT,
depname varchar(255)    
)


2)
create table company
(
compid int primary key AUTO_INCREMENT,
compname varchar(255)    
)

3)
create table employee 
(
empid int primary key AUTO_INCREMENT,
empname varchar(255),
email varchar(255),
passsword varchar(255),
salary int,
depid int REFERENCES department(depid),
compid int REFERENCES department(compid)
)




              SQL join : 

                     join will used to join more than one table if data are matched from first table to second table.

                 types of join :

                      a) inner join 
                      b) join 
                      c) outer join 
                             1) left join  
                             2) right join 
                             3) full join 
                       d) cross join 

            Inner join : 
                  inner join will used to join more than one table if data are matched from first table to second table join all data with common field.

                          
                  eg: select employee.*,compname,depname from employee inner join company on employee.compid=company.compid inner join department on employee.depid=department.depid

                       or 

                   eg: select empid,empname,email,passsword,salary,compname,depname from employee inner join company on employee.compid=company.compid inner join department on employee.depid=department.depid           


            join : 
                  join will be same as inner join  used to join more than one table if data are matched from first table to second table join all data with common field.

                          
                  eg: select employee.*,compname,depname from employee  join company on employee.compid=company.compid  join department on employee.depid=department.depid

                       or 

                   eg: select empid,empname,email,passsword,salary,compname,depname from employee  join company on employee.compid=company.compid  join department on employee.depid=department.depid           

                

3) outer join 
     a) left join : left join is used to join first table of left rows matched with second table of left rows if data are matched join all data otherwise return null value.

                       
                  eg: select employee.*,compname,depname from employee  left join company on employee.compid=company.compid left join department on employee.depid=department.depid

                       or 

                   eg: select empid,empname,email,passsword,salary,compname,depname from employee  left join company on employee.compid=company.compid  left join department on employee.depid=department.depid   



 a) right join : right join is used to join and matched data from  second table of right rows matched with first table of right rows if data are matched join all data otherwise return null value.

                       
                  eg: select employee.*,compname,depname from employee  right join company on employee.compid=company.compid right join department on employee.depid=department.depid

                       or 

                   eg: select empid,empname,email,passsword,salary,compname,depname from employee  right join company on employee.compid=company.compid  right join department on employee.depid=department.depid     
 

select employee.*,depname,compname from employee right join department on employee.depid=department.depid right join company on employee.compid=company.compid;

  full  join : left join + right join    
  Note : full join is not supported
 

4) cross join : cross join is used to cross of each numbers of rows with another table

         eg:  select * FROM employee cross join company;
         eg:  select * FROM employee cross join company CROSS join department;